{"version":3,"sources":["app.js","salary.js","main.js"],"names":["$","Salary","options","__this","this","setResult","value","result","period","netInPeriod","Unit","net","grossInPeriod","gross","ops","opsMax","Percentage","ops2","opsInPeriod","oms","omsMax","oms2","omsInPeriod","fss","fssInPeriod","insurance","insuranceInPeriod","ndfl","ndflInPeriod","fot","fotInPeriod","nalogAll","nalogAllInPeriod","fullCost","fullCostInPeriod","onePercent","from","percentage","toFixed","setGross","Object","assign","setNet","salary","$app","html","$inApp","append","$input","find","$result","location","hash","replace","val","renderResult","d","text","formatUnit","setValue","$elem","attr","removeAttr","test","change","keyup","on","parent","toggleClass","event","addClass","removeClass","console","log"],"mappings":"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","file":"main.js","sourcesContent":["$(function () {\n  var salary = new Salary();\n\n  var $app = $('#app').html('');\n\n  var $inApp = $(`\n<din>\n  <form>\n  <div class=\"search\">\n    <input type=\"number\" min=\"0\" maxlength=\"12\" max=\"3000000\" pattern=\"[0-9]+\" autofocus class=\"search__input\" />\n    <div class=\"search__placeholder\"><span>Зарплата на руки (нетто)</span></div>\n  </div>\n  </form>\n  <div class=\"result\">\n    <div class=\"result__line\" id=\"gross\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Оклад (гросс)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Оклад до вычета НДФЛ. Именно гросс оклад фиксируются в трудовом договоре с сотрудником</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"fullCost\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Стоимость сотрудника для работодателя</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Зарплата сотруднику на руки плюс сумма всех выплат за сотрудника государству. Расходы на организацию рабочего места для сотрудника не учитываются</p>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"result__line\" id=\"nalogAll\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Все выплаты государству</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Сумма всех выплат государству: НДФЛ, ОПС, ОМС, ФСС и взносов по «травматизму»</p>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"result__line\" id=\"ndfl\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Налог на доходы физических лиц (НДФЛ)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Работодатель выплачивает за сотрудника налог государству как налоговый агент. Налог на доход для физического лица включен в оклад сотрудника и составляет 13% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"ops\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">В фонд Обязательного пенсионного страхования (ОПС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 22% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"oms\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Обязательное медицинское страхование жизни (ОМС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 5,1% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"fss\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">В фонд социального страхования (ФСС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 2,9% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"insurance\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Взносы по «травматизму»</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника. Размер отчислений зависит от присвоенного класса профессионального риска. Минимально 0,2% от оклада</p>\n      </div>\n    </div>\n  </div>\n</div>`\n  );\n\n  $app.append($inApp);\n\n  var $input = $inApp.find('.search__input');\n  var $result = $inApp.find('.result');\n\n\n  if (location.hash) {\n    var value = +location.hash.replace('#', '');\n    $input.val(value);\n    renderResult(value);\n\n  } else {\n    renderResult(0);\n  }\n\n  setValue($input);\n\n  $input.change(function () {\n    $(this).keyup();\n  });\n\n  $result.find('.result__title').on('click',function(){\n    $(this).parent().parent().find('.result__body').toggleClass('result__body_visible');\n  });\n  \n  $input.keyup(function (event) {\n\n\n\n    var value = +$(this).val();\n\n\n    setValue($(this));\n\n\n    var d = renderResult(value);\n\n    if ($(this).val()) {\n      $(this).addClass('search__input_not-empty');\n    } else {\n      $(this).removeClass('search__input_not-empty');\n    }\n\n\n    location.hash = '#' + d.net;\n\n\n  });\n\n  function renderResult(value) {\n    var d = salary.setNet(value);\n    \n    $('#gross').find('.result__per-month .cost').text(formatUnit(d.gross));\n    \n    $('#fullCost').find('.result__per-month .cost').text(formatUnit(d.fullCost));\n    \n    $('#nalogAll').find('.result__per-month .cost').text(formatUnit(d.nalogAll));\n    \n    $('#ndfl').find('.result__per-month .cost').text(formatUnit(d.ndfl));\n    \n    $('#ops').find('.result__per-month .cost').text(formatUnit(d.ops));\n    \n    $('#oms').find('.result__per-month .cost').text(formatUnit(d.oms));\n    \n    $('#fss').find('.result__per-month .cost').text(formatUnit(d.fss));\n    \n    $('#insurance').find('.result__per-month .cost').text(formatUnit(d.insurance));\n    \n    \n    return d;\n  }\n\n  function setValue($elem) {\n\n    value = $elem.val();\n\n    if (value) {\n      $elem.attr('value', value);\n    } else {\n      $elem.removeAttr('value');\n    }\n  }\n\n  function formatUnit(value) {\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    return (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n  }\n\n\n\n});","\"use strict\"\n\nfunction Salary(options){\n  var __this = this;\n  \n  options = options || {};\n  this.options = {};\n  this.options.ndfl      = options.ndfl      || 13;      //НДФЛ\n  this.options.ops       = options.ops       || 22;      //Пенсионное страхование\n  this.options.opsMax    = options.opsMax    || 1150000  //Предельная величина дохода для пенсионного страхования\n  this.options.ops2      = options.ops2      || 10;      //Пенсионное страхование свыше предельной величины\n  this.options.oms       = options.oms       || 5.1;     //Медицинское страхование \n  this.options.omsMax    = options.omsMax    || 865000;  //Предельная величина дохода для медицинского страхования\n  this.options.oms2      = options.oms2      || 5.1;     //Медицинское страхование свыше предельной величины \n  this.options.fss       = options.fss       || 2.9;     //Социальное страхование \n  this.options.insurance = options.insurance || 0.2;     //Страховка\n  this.options.period    = options.period    || 12;      //период для расчета (месяцев)\n  \n  \n  \n  this.result = {};\n  \n  this.setGross = function(value){\n    \n    __this.result.gross = Unit(value);\n    __this.result.net = Unit(value - ( Percentage(value, __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  this.setNet = function(value){\n    \n    __this.result.net = Unit(value);\n    __this.result.gross = Unit(value / ( onePercent(100 - __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  function setResult(value){\n    let result = {};\n    let period = __this.options.period;\n    \n    result.netInPeriod       = Unit(__this.result.net * period);\n    result.grossInPeriod     = Unit(__this.result.gross * period);\n    \n    result.ops               = ( value <= __this.options.opsMax ) ? \n                               Unit( Percentage(value, __this.options.ops) ) : \n                               Unit( Percentage(__this.options.opsMax, __this.options.ops2) );\n    result.opsInPeriod       = Unit(result.ops * period);\n    \n    result.oms               = ( value <= __this.options.omsMax ) ? \n                               Unit( Percentage(value, __this.options.oms) ) :\n                               Unit( Percentage(__this.options.omsMax, __this.options.oms2) );\n    result.omsInPeriod       = Unit(result.oms * period);\n    \n    result.fss               = Unit( Percentage(value, __this.options.fss) );\n    result.fssInPeriod       = Unit(result.fss * period);\n    \n    result.insurance         = Unit( Percentage(value, __this.options.insurance) );\n    result.insuranceInPeriod = Unit(result.insurance * period);\n    \n    result.ndfl              = Unit( Percentage(value, __this.options.ndfl) );\n    result.ndflInPeriod      = Unit(result.ndfl * period);\n    \n    result.fot               = Unit(result.ops + result.oms + result.fss + result.insurance);\n    result.fotInPeriod       = Unit(result.fot * period);\n    \n    result.nalogAll          = Unit(result.ops + result.oms + result.fss + result.insurance + result.ndfl);\n    result.nalogAllInPeriod  = Unit(result.nalogAll * period);\n\n    result.fullCost          = Unit(result.nalogAll + __this.result.net);\n    result.fullCostInPeriod  = Unit(result.fullCost * period);\n    \n    return result;\n  }\n\n  function onePercent(value){\n    return value / 100;  \n  }\n  \n  function Percentage(from, percentage){\n    return onePercent(from) * percentage;\n  }\n  \n  function Unit(value){\n    return +( value ).toFixed(2);\n  }\n  \n  \n  \n  return __this;\n  \n}","$(function(){\n$(function () {\n  var salary = new Salary();\n\n  var $app = $('#app').html('');\n\n  var $inApp = $(`\n<din>\n  <form>\n  <div class=\"search\">\n    <input type=\"number\" min=\"0\" maxlength=\"12\" max=\"3000000\" pattern=\"[0-9]+\" autofocus class=\"search__input\" />\n    <div class=\"search__placeholder\"><span>Зарплата на руки (нетто)</span></div>\n  </div>\n  </form>\n  <div class=\"result\">\n    <div class=\"result__line\" id=\"gross\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Оклад (гросс)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Оклад до вычета НДФЛ. Именно гросс оклад фиксируются в трудовом договоре с сотрудником</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"fullCost\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Стоимость сотрудника для работодателя</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Зарплата сотруднику на руки плюс сумма всех выплат за сотрудника государству. Расходы на организацию рабочего места для сотрудника не учитываются</p>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"result__line\" id=\"nalogAll\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Все выплаты государству</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Сумма всех выплат государству: НДФЛ, ОПС, ОМС, ФСС и взносов по «травматизму»</p>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"result__line\" id=\"ndfl\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Налог на доходы физических лиц (НДФЛ)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Работодатель выплачивает за сотрудника налог государству как налоговый агент. Налог на доход для физического лица включен в оклад сотрудника и составляет 13% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"ops\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">В фонд Обязательного пенсионного страхования (ОПС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 22% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"oms\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Обязательное медицинское страхование жизни (ОМС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 5,1% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"fss\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">В фонд социального страхования (ФСС)</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника и составляет 2,9% от оклада</p>\n      </div>\n    </div>\n\n    <div class=\"result__line\" id=\"insurance\">\n      <div class=\"result__head\">\n        <div class=\"result__title\">Взносы по «травматизму»</div>\n        <div class=\"result__per-month\">\n          <span class=\"cost\">0</span> ₽/мес\n        </div>\n      </div>\n      <div class=\"result__body\">\n        <p>Отчисления идет за счет работодателя. Высчитывается из оклада сотрудника. Размер отчислений зависит от присвоенного класса профессионального риска. Минимально 0,2% от оклада</p>\n      </div>\n    </div>\n  </div>\n</div>`\n  );\n\n  $app.append($inApp);\n\n  var $input = $inApp.find('.search__input');\n  var $result = $inApp.find('.result');\n\n\n  if (location.hash) {\n    var value = +location.hash.replace('#', '');\n    $input.val(value);\n    renderResult(value);\n\n  } else {\n    renderResult(0);\n  }\n\n  setValue($input);\n\n  $input.change(function () {\n    $(this).keyup();\n  });\n\n  $result.find('.result__title').on('click',function(){\n    $(this).parent().parent().find('.result__body').toggleClass('result__body_visible');\n  });\n  \n  $input.keyup(function (event) {\n\n\n\n    var value = +$(this).val();\n\n\n    setValue($(this));\n\n\n    var d = renderResult(value);\n\n    if ($(this).val()) {\n      $(this).addClass('search__input_not-empty');\n    } else {\n      $(this).removeClass('search__input_not-empty');\n    }\n\n\n    location.hash = '#' + d.net;\n\n\n  });\n\n  function renderResult(value) {\n    var d = salary.setNet(value);\n    \n    $('#gross').find('.result__per-month .cost').text(formatUnit(d.gross));\n    \n    $('#fullCost').find('.result__per-month .cost').text(formatUnit(d.fullCost));\n    \n    $('#nalogAll').find('.result__per-month .cost').text(formatUnit(d.nalogAll));\n    \n    $('#ndfl').find('.result__per-month .cost').text(formatUnit(d.ndfl));\n    \n    $('#ops').find('.result__per-month .cost').text(formatUnit(d.ops));\n    \n    $('#oms').find('.result__per-month .cost').text(formatUnit(d.oms));\n    \n    $('#fss').find('.result__per-month .cost').text(formatUnit(d.fss));\n    \n    $('#insurance').find('.result__per-month .cost').text(formatUnit(d.insurance));\n    \n    \n    return d;\n  }\n\n  function setValue($elem) {\n\n    value = $elem.val();\n\n    if (value) {\n      $elem.attr('value', value);\n    } else {\n      $elem.removeAttr('value');\n    }\n  }\n\n  function formatUnit(value) {\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    return (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n  }\n\n\n\n});\n\"use strict\"\n\nfunction Salary(options){\n  var __this = this;\n  \n  options = options || {};\n  this.options = {};\n  this.options.ndfl      = options.ndfl      || 13;      //НДФЛ\n  this.options.ops       = options.ops       || 22;      //Пенсионное страхование\n  this.options.opsMax    = options.opsMax    || 1150000  //Предельная величина дохода для пенсионного страхования\n  this.options.ops2      = options.ops2      || 10;      //Пенсионное страхование свыше предельной величины\n  this.options.oms       = options.oms       || 5.1;     //Медицинское страхование \n  this.options.omsMax    = options.omsMax    || 865000;  //Предельная величина дохода для медицинского страхования\n  this.options.oms2      = options.oms2      || 5.1;     //Медицинское страхование свыше предельной величины \n  this.options.fss       = options.fss       || 2.9;     //Социальное страхование \n  this.options.insurance = options.insurance || 0.2;     //Страховка\n  this.options.period    = options.period    || 12;      //период для расчета (месяцев)\n  \n  \n  \n  this.result = {};\n  \n  this.setGross = function(value){\n    \n    __this.result.gross = Unit(value);\n    __this.result.net = Unit(value - ( Percentage(value, __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  this.setNet = function(value){\n    \n    __this.result.net = Unit(value);\n    __this.result.gross = Unit(value / ( onePercent(100 - __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  function setResult(value){\n    let result = {};\n    let period = __this.options.period;\n    \n    result.netInPeriod       = Unit(__this.result.net * period);\n    result.grossInPeriod     = Unit(__this.result.gross * period);\n    \n    result.ops               = ( value <= __this.options.opsMax ) ? \n                               Unit( Percentage(value, __this.options.ops) ) : \n                               Unit( Percentage(__this.options.opsMax, __this.options.ops2) );\n    result.opsInPeriod       = Unit(result.ops * period);\n    \n    result.oms               = ( value <= __this.options.omsMax ) ? \n                               Unit( Percentage(value, __this.options.oms) ) :\n                               Unit( Percentage(__this.options.omsMax, __this.options.oms2) );\n    result.omsInPeriod       = Unit(result.oms * period);\n    \n    result.fss               = Unit( Percentage(value, __this.options.fss) );\n    result.fssInPeriod       = Unit(result.fss * period);\n    \n    result.insurance         = Unit( Percentage(value, __this.options.insurance) );\n    result.insuranceInPeriod = Unit(result.insurance * period);\n    \n    result.ndfl              = Unit( Percentage(value, __this.options.ndfl) );\n    result.ndflInPeriod      = Unit(result.ndfl * period);\n    \n    result.fot               = Unit(result.ops + result.oms + result.fss + result.insurance);\n    result.fotInPeriod       = Unit(result.fot * period);\n    \n    result.nalogAll          = Unit(result.ops + result.oms + result.fss + result.insurance + result.ndfl);\n    result.nalogAllInPeriod  = Unit(result.nalogAll * period);\n\n    result.fullCost          = Unit(result.nalogAll + __this.result.net);\n    result.fullCostInPeriod  = Unit(result.fullCost * period);\n    \n    return result;\n  }\n\n  function onePercent(value){\n    return value / 100;  \n  }\n  \n  function Percentage(from, percentage){\n    return onePercent(from) * percentage;\n  }\n  \n  function Unit(value){\n    return +( value ).toFixed(2);\n  }\n  \n  \n  \n  return __this;\n  \n}\nconsole.log(\"version: 0.1.0\"); });"],"sourceRoot":"/source/"}