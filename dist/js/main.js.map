{"version":3,"sources":["app.js","salary.js","main.js"],"names":["$","Salary","options","__this","this","setResult","value","result","period","netInPeriod","Unit","net","grossInPeriod","gross","ops","opsMax","Percentage","ops2","opsInPeriod","oms","omsMax","oms2","omsInPeriod","fss","fssInPeriod","insurance","insuranceInPeriod","ndfl","ndflInPeriod","fot","fotInPeriod","nalogAll","nalogAllInPeriod","fullCost","fullCostInPeriod","onePercent","from","percentage","toFixed","setGross","Object","assign","setNet","salary","$app","$inApp","$input","find","$result","location","hash","replace","val","renderResult","d","$data","concat","formatUnit","html","append","test","change","keyup","addClass","removeClass","console","log"],"mappings":"aAAAA,EAAA,WCGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KAuCA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAAL,EAAAD,QAAAM,OAiCA,OA/BAD,EAAAE,YAAAC,EAAAP,EAAAI,OAAAI,IAAAH,GACAD,EAAAK,cAAAF,EAAAP,EAAAI,OAAAM,MAAAL,GAEAD,EAAAO,IAAAR,GAAAH,EAAAD,QAAAa,OACAL,EAAAM,EAAAV,EAAAH,EAAAD,QAAAY,MACAJ,EAAAM,EAAAb,EAAAD,QAAAa,OAAAZ,EAAAD,QAAAe,OACAV,EAAAW,YAAAR,EAAAH,EAAAO,IAAAN,GAEAD,EAAAY,IAAAb,GAAAH,EAAAD,QAAAkB,OACAV,EAAAM,EAAAV,EAAAH,EAAAD,QAAAiB,MACAT,EAAAM,EAAAb,EAAAD,QAAAkB,OAAAjB,EAAAD,QAAAmB,OACAd,EAAAe,YAAAZ,EAAAH,EAAAY,IAAAX,GAEAD,EAAAgB,IAAAb,EAAAM,EAAAV,EAAAH,EAAAD,QAAAqB,MACAhB,EAAAiB,YAAAd,EAAAH,EAAAgB,IAAAf,GAEAD,EAAAkB,UAAAf,EAAAM,EAAAV,EAAAH,EAAAD,QAAAuB,YACAlB,EAAAmB,kBAAAhB,EAAAH,EAAAkB,UAAAjB,GAEAD,EAAAoB,KAAAjB,EAAAM,EAAAV,EAAAH,EAAAD,QAAAyB,OACApB,EAAAqB,aAAAlB,EAAAH,EAAAoB,KAAAnB,GAEAD,EAAAsB,IAAAnB,EAAAH,EAAAO,IAAAP,EAAAY,IAAAZ,EAAAgB,IAAAhB,EAAAkB,WACAlB,EAAAuB,YAAApB,EAAAH,EAAAsB,IAAArB,GAEAD,EAAAwB,SAAArB,EAAAH,EAAAO,IAAAP,EAAAY,IAAAZ,EAAAgB,IAAAhB,EAAAkB,UAAAlB,EAAAoB,MACApB,EAAAyB,iBAAAtB,EAAAH,EAAAwB,SAAAvB,GAEAD,EAAA0B,SAAAvB,EAAAH,EAAAwB,SAAA5B,EAAAI,OAAAI,KACAJ,EAAA2B,iBAAAxB,EAAAH,EAAA0B,SAAAzB,GAEAD,EAGA,SAAA4B,EAAA7B,GACA,OAAAA,EAAA,IAGA,SAAAU,EAAAoB,EAAAC,GACA,OAAAF,EAAAC,GAAAC,EAGA,SAAA3B,EAAAJ,GACA,OAAAA,EAAAgC,QAAA,GAKA,OAzFApC,EAAAA,GAAA,GACAE,KAAAF,QAAA,GACAE,KAAAF,QAAAyB,KAAAzB,EAAAyB,MAAA,GACAvB,KAAAF,QAAAY,IAAAZ,EAAAY,KAAA,GACAV,KAAAF,QAAAa,OAAAb,EAAAa,QAAA,MACAX,KAAAF,QAAAe,KAAAf,EAAAe,MAAA,GACAb,KAAAF,QAAAiB,IAAAjB,EAAAiB,KAAA,IACAf,KAAAF,QAAAkB,OAAAlB,EAAAkB,QAAA,MACAhB,KAAAF,QAAAmB,KAAAnB,EAAAmB,MAAA,IACAjB,KAAAF,QAAAqB,IAAArB,EAAAqB,KAAA,IACAnB,KAAAF,QAAAuB,UAAAvB,EAAAuB,WAAA,GACArB,KAAAF,QAAAM,OAAAN,EAAAM,QAAA,GAIAJ,KAAAG,OAAA,GAEAH,KAAAmC,SAAA,SAAAjC,GAOA,OALAH,EAAAI,OAAAM,MAAAH,EAAAJ,GACAH,EAAAI,OAAAI,IAAAD,EAAAJ,EAAAU,EAAAV,EAAAH,EAAAD,QAAAyB,OAEAa,OAAAC,OAAAtC,EAAAI,OAAAF,EAAAF,EAAAI,OAAAM,QAEAV,EAAAI,QAGAH,KAAAsC,OAAA,SAAApC,GAOA,OALAH,EAAAI,OAAAI,IAAAD,EAAAJ,GACAH,EAAAI,OAAAM,MAAAH,EAAAJ,EAAA6B,EAAA,IAAAhC,EAAAD,QAAAyB,OAEAa,OAAAC,OAAAtC,EAAAI,OAAAF,EAAAF,EAAAI,OAAAM,QAEAV,EAAAI,QAuDAJ,ED9FAH,EAAA,WACA,IAAA2C,EAAA,IAAA1C,EAEA2C,EAAA5C,EAAA,QAEA6C,EAAA7C,EAAA,yLASA8C,EAAAD,EAAAE,KAAA,UACAC,EAAAH,EAAAE,KAAA,WAGA,GAAAE,SAAAC,KAAA,CACA,IAAA5C,GAAA2C,SAAAC,KAAAC,QAAA,IAAA,IACAL,EAAAM,IAAA9C,GACA+C,EAAA/C,QAGA+C,EAAA,GAwBA,SAAAA,EAAA/C,GACA,IAAAgD,EAAAX,EAAAD,OAAApC,GACAiD,EAAAvD,EAAA,+GAAAwD,OAEAC,EAAAH,EAAArB,UAFA,qJAAAuB,OAIAC,EAAAH,EAAAvB,UAJA,2IAAAyB,OAMAC,EAAAH,EAAA3B,MANA,kJAAA6B,OAOAC,EAAAH,EAAAxC,KAPA,gJAAA0C,OAQAC,EAAAH,EAAAnC,KARA,oIAAAqC,OASAC,EAAAH,EAAA/B,KATA,uHAAAiC,OAUAC,EAAAH,EAAA7B,WAVA,oCAgBA,OAFAuB,EAAAU,KAAA,IAAAC,OAAAJ,GAEAD,EAGA,SAAAG,EAAAnD,GAEA,OADAA,EAAA,OAAAsD,KAAAtD,GAAAA,EAAA,GAAAA,EAAA,OACA6C,QAAA,oBAAA,OA3CAL,EAAAe,OAAA,WACA7D,EAAAI,MAAA0D,UAGAhB,EAAAgB,MAAA,WACA,IAEAR,EAAAD,GAFArD,EAAAI,MAAAgD,OAIApD,EAAAI,MAAAgD,MACApD,EAAAI,MAAA2D,SAAA,mBAEA/D,EAAAI,MAAA4D,YAAA,mBAIAf,SAAAC,KAAA,IAAAI,EAAA3C,MA8BAiC,EAAAe,OAAAd,KEqGAoB,QAAQC,IAAI","file":"main.js","sourcesContent":["$(function(){\n  var salary = new Salary();\n  \n  var $app = $('#app');\n  \n  var $inApp = $(\n`<din>\n  <input type=\"number\" min=\"0\" max=\"3000000\" autofocus placeholder=\"Укажите сумму которую вы получаете на руки (нетто)\" class=\"input\" />\n  <div class=\"result\"></div>\n</div>`\n  );\n  \n  \n  \n  var $input = $inApp.find('.input');\n  var $result = $inApp.find('.result');\n  \n  \n  if ( location.hash ){\n    var value = +location.hash.replace('#','');\n    $input.val(value);\n    renderResult(value);\n    \n  } else {\n    renderResult(0);\n  }\n  \n  \n  $input.change(function(){\n    $(this).keyup();\n  });\n  \n  $input.keyup(function(){\n    var value = +$(this).val();\n    \n    var d = renderResult(value);\n    \n    if ($(this).val()){\n      $(this).addClass('input_not-empty');\n    } else {\n      $(this).removeClass('input_not-empty');\n    }\n    \n    \n    location.hash = '#' + d.net;\n    \n  });\n  \n  function renderResult(value){\n    var d = salary.setNet(value);\n    var $data = $(\n`\n<div class=\"result__line\"><div>Стоимость сотрудника для работодателя в месяц</div><div><span class=\"cost\">${formatUnit(d.fullCost)}</span>&nbsp;руб.</div></div>\n<hr>\n<div class=\"result__line\"><div>Столько на вас зарабатывает государство в месяц</div><div><span class=\"cost\">${formatUnit(d.nalogAll)}</span>&nbsp;руб.</div></div>\n<hr>\n<div class=\"result__line\"><div>Налог на доходы физических лиц (НДФЛ)</div><div><span class=\"cost\">${formatUnit(d.ndfl)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>В фонд Обязательного пенсионного страхования (ОПС)</div><div><span class=\"cost\">${formatUnit(d.ops)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>Обязательное медицинское страхование жизни (ОМС)</div><div><span class=\"cost\">${formatUnit(d.oms)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>В фонд социального страхования (ФСС)</div><div><span class=\"cost\">${formatUnit(d.fss)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>Взносы по «травматизму»</div><div><span class=\"cost\">${formatUnit(d.insurance)}</span>&nbsp;руб.</div></div>\n`\n    );\n    \n    $result.html('').append($data);\n    \n    return d;\n  }\n  \n  function formatUnit(value){\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    return ( value ).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n  }\n  \n  $app.append($inApp);\n  \n});\n","\"use strict\"\n\nfunction Salary(options){\n  var __this = this;\n  \n  options = options || {};\n  this.options = {};\n  this.options.ndfl      = options.ndfl      || 13;      //НДФЛ\n  this.options.ops       = options.ops       || 22;      //Пенсионное страхование\n  this.options.opsMax    = options.opsMax    || 1150000  //Предельная величина дохода для пенсионного страхования\n  this.options.ops2      = options.ops2      || 10;      //Пенсионное страхование свыше предельной величины\n  this.options.oms       = options.oms       || 5.1;     //Медицинское страхование \n  this.options.omsMax    = options.omsMax    || 865000;  //Предельная величина дохода для медицинского страхования\n  this.options.oms2      = options.oms2      || 5.1;     //Медицинское страхование свыше предельной величины \n  this.options.fss       = options.fss       || 2.9;     //Социальное страхование \n  this.options.insurance = options.insurance || 0.2;     //Страховка\n  this.options.period    = options.period    || 12;      //период для расчета (месяцев)\n  \n  \n  \n  this.result = {};\n  \n  this.setGross = function(value){\n    \n    __this.result.gross = Unit(value);\n    __this.result.net = Unit(value - ( Percentage(value, __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  this.setNet = function(value){\n    \n    __this.result.net = Unit(value);\n    __this.result.gross = Unit(value / ( onePercent(100 - __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  function setResult(value){\n    let result = {};\n    let period = __this.options.period;\n    \n    result.netInPeriod       = Unit(__this.result.net * period);\n    result.grossInPeriod     = Unit(__this.result.gross * period);\n    \n    result.ops               = ( value <= __this.options.opsMax ) ? \n                               Unit( Percentage(value, __this.options.ops) ) : \n                               Unit( Percentage(__this.options.opsMax, __this.options.ops2) );\n    result.opsInPeriod       = Unit(result.ops * period);\n    \n    result.oms               = ( value <= __this.options.omsMax ) ? \n                               Unit( Percentage(value, __this.options.oms) ) :\n                               Unit( Percentage(__this.options.omsMax, __this.options.oms2) );\n    result.omsInPeriod       = Unit(result.oms * period);\n    \n    result.fss               = Unit( Percentage(value, __this.options.fss) );\n    result.fssInPeriod       = Unit(result.fss * period);\n    \n    result.insurance         = Unit( Percentage(value, __this.options.insurance) );\n    result.insuranceInPeriod = Unit(result.insurance * period);\n    \n    result.ndfl              = Unit( Percentage(value, __this.options.ndfl) );\n    result.ndflInPeriod      = Unit(result.ndfl * period);\n    \n    result.fot               = Unit(result.ops + result.oms + result.fss + result.insurance);\n    result.fotInPeriod       = Unit(result.fot * period);\n    \n    result.nalogAll          = Unit(result.ops + result.oms + result.fss + result.insurance + result.ndfl);\n    result.nalogAllInPeriod  = Unit(result.nalogAll * period);\n\n    result.fullCost          = Unit(result.nalogAll + __this.result.net);\n    result.fullCostInPeriod  = Unit(result.fullCost * period);\n    \n    return result;\n  }\n\n  function onePercent(value){\n    return value / 100;  \n  }\n  \n  function Percentage(from, percentage){\n    return onePercent(from) * percentage;\n  }\n  \n  function Unit(value){\n    return +( value ).toFixed(2);\n  }\n  \n  \n  \n  return __this;\n  \n}","$(function(){\n$(function(){\n  var salary = new Salary();\n  \n  var $app = $('#app');\n  \n  var $inApp = $(\n`<din>\n  <input type=\"number\" min=\"0\" max=\"3000000\" autofocus placeholder=\"Укажите сумму которую вы получаете на руки (нетто)\" class=\"input\" />\n  <div class=\"result\"></div>\n</div>`\n  );\n  \n  \n  \n  var $input = $inApp.find('.input');\n  var $result = $inApp.find('.result');\n  \n  \n  if ( location.hash ){\n    var value = +location.hash.replace('#','');\n    $input.val(value);\n    renderResult(value);\n    \n  } else {\n    renderResult(0);\n  }\n  \n  \n  $input.change(function(){\n    $(this).keyup();\n  });\n  \n  $input.keyup(function(){\n    var value = +$(this).val();\n    \n    var d = renderResult(value);\n    \n    if ($(this).val()){\n      $(this).addClass('input_not-empty');\n    } else {\n      $(this).removeClass('input_not-empty');\n    }\n    \n    \n    location.hash = '#' + d.net;\n    \n  });\n  \n  function renderResult(value){\n    var d = salary.setNet(value);\n    var $data = $(\n`\n<div class=\"result__line\"><div>Стоимость сотрудника для работодателя в месяц</div><div><span class=\"cost\">${formatUnit(d.fullCost)}</span>&nbsp;руб.</div></div>\n<hr>\n<div class=\"result__line\"><div>Столько на вас зарабатывает государство в месяц</div><div><span class=\"cost\">${formatUnit(d.nalogAll)}</span>&nbsp;руб.</div></div>\n<hr>\n<div class=\"result__line\"><div>Налог на доходы физических лиц (НДФЛ)</div><div><span class=\"cost\">${formatUnit(d.ndfl)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>В фонд Обязательного пенсионного страхования (ОПС)</div><div><span class=\"cost\">${formatUnit(d.ops)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>Обязательное медицинское страхование жизни (ОМС)</div><div><span class=\"cost\">${formatUnit(d.oms)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>В фонд социального страхования (ФСС)</div><div><span class=\"cost\">${formatUnit(d.fss)}</span>&nbsp;руб.</div></div>\n<div class=\"result__line\"><div>Взносы по «травматизму»</div><div><span class=\"cost\">${formatUnit(d.insurance)}</span>&nbsp;руб.</div></div>\n`\n    );\n    \n    $result.html('').append($data);\n    \n    return d;\n  }\n  \n  function formatUnit(value){\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    return ( value ).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n  }\n  \n  $app.append($inApp);\n  \n});\n\n\"use strict\"\n\nfunction Salary(options){\n  var __this = this;\n  \n  options = options || {};\n  this.options = {};\n  this.options.ndfl      = options.ndfl      || 13;      //НДФЛ\n  this.options.ops       = options.ops       || 22;      //Пенсионное страхование\n  this.options.opsMax    = options.opsMax    || 1150000  //Предельная величина дохода для пенсионного страхования\n  this.options.ops2      = options.ops2      || 10;      //Пенсионное страхование свыше предельной величины\n  this.options.oms       = options.oms       || 5.1;     //Медицинское страхование \n  this.options.omsMax    = options.omsMax    || 865000;  //Предельная величина дохода для медицинского страхования\n  this.options.oms2      = options.oms2      || 5.1;     //Медицинское страхование свыше предельной величины \n  this.options.fss       = options.fss       || 2.9;     //Социальное страхование \n  this.options.insurance = options.insurance || 0.2;     //Страховка\n  this.options.period    = options.period    || 12;      //период для расчета (месяцев)\n  \n  \n  \n  this.result = {};\n  \n  this.setGross = function(value){\n    \n    __this.result.gross = Unit(value);\n    __this.result.net = Unit(value - ( Percentage(value, __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  this.setNet = function(value){\n    \n    __this.result.net = Unit(value);\n    __this.result.gross = Unit(value / ( onePercent(100 - __this.options.ndfl) ));\n    \n    Object.assign(__this.result, setResult(__this.result.gross));\n    \n    return __this.result;\n  }\n  \n  function setResult(value){\n    let result = {};\n    let period = __this.options.period;\n    \n    result.netInPeriod       = Unit(__this.result.net * period);\n    result.grossInPeriod     = Unit(__this.result.gross * period);\n    \n    result.ops               = ( value <= __this.options.opsMax ) ? \n                               Unit( Percentage(value, __this.options.ops) ) : \n                               Unit( Percentage(__this.options.opsMax, __this.options.ops2) );\n    result.opsInPeriod       = Unit(result.ops * period);\n    \n    result.oms               = ( value <= __this.options.omsMax ) ? \n                               Unit( Percentage(value, __this.options.oms) ) :\n                               Unit( Percentage(__this.options.omsMax, __this.options.oms2) );\n    result.omsInPeriod       = Unit(result.oms * period);\n    \n    result.fss               = Unit( Percentage(value, __this.options.fss) );\n    result.fssInPeriod       = Unit(result.fss * period);\n    \n    result.insurance         = Unit( Percentage(value, __this.options.insurance) );\n    result.insuranceInPeriod = Unit(result.insurance * period);\n    \n    result.ndfl              = Unit( Percentage(value, __this.options.ndfl) );\n    result.ndflInPeriod      = Unit(result.ndfl * period);\n    \n    result.fot               = Unit(result.ops + result.oms + result.fss + result.insurance);\n    result.fotInPeriod       = Unit(result.fot * period);\n    \n    result.nalogAll          = Unit(result.ops + result.oms + result.fss + result.insurance + result.ndfl);\n    result.nalogAllInPeriod  = Unit(result.nalogAll * period);\n\n    result.fullCost          = Unit(result.nalogAll + __this.result.net);\n    result.fullCostInPeriod  = Unit(result.fullCost * period);\n    \n    return result;\n  }\n\n  function onePercent(value){\n    return value / 100;  \n  }\n  \n  function Percentage(from, percentage){\n    return onePercent(from) * percentage;\n  }\n  \n  function Unit(value){\n    return +( value ).toFixed(2);\n  }\n  \n  \n  \n  return __this;\n  \n}\nconsole.log(\"version: 0.1.0\"); });"],"sourceRoot":"/source/"}